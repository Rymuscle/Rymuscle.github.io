[{"title":"二叉树","date":"2020-10-11T12:15:32.000Z","path":"2020/10/11/data-structure-algorithm/树-02/","text":"逻辑结构 和 物理结构数据结构可以从两个维度划分为： 逻辑结构 和 物理结构 两大类 逻辑结构 是 揭示了数据元素之间的逻辑关系，是抽象意义上的结构 （也是我们后面重点关注和讨论的） 123在数组和链表中，数据按照顺序依次排列，体现了数据之间的线性关系；而在树中，数据从顶部向下按层次排列，表现出祖先与后代之间的派生关系；图则由节点和边构成，反映了复杂的网络关系。 在算法运行过程中，相关数据都存储在内存中，物理结构 正是反映了 按一定逻辑结构组成的数据元素 在计算机内存中真正的存储结构可分为 连续空间存储（数组） 和 分散空间存储（链表） 逻辑结构逻辑结构可被分为“线性”和“非线性”两大类 线性结构比较直观，指数据在逻辑关系上呈线性排列；如：数组、链表、栈、队列、哈希表。 非线性结构则相反，呈非线性排列。如：树、堆、图、哈希表。 所有数据结构都是基于 数组、链表 或二者的组合实现的。 12例如，栈和队列既可以使用数组实现，也可以使用链表实现；而哈希表的实现可能同时包含数组和链表。 基于数组可实现：栈、队列、哈希表、树、堆、图、矩阵、张量（维度&gt;&#x3D;3的数组）等。基于链表可实现：栈、队列、哈希表、树、堆、图等。 参考：https://www.hello-algo.com/chapter_data_structure/classification_of_data_structure/","tags":[{"name":"数据结构","slug":"数据结构","permalink":"http://rymuscle.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"算法","slug":"算法","permalink":"http://rymuscle.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"数据结构分类","date":"2020-10-11T12:15:32.000Z","path":"2020/10/11/data-structure-algorithm/01/","text":"数据结构分类数据结构可以从两个维度分为： 逻辑结构 和 物理结构 逻辑结构 揭示了数据元素之间的逻辑关系，是抽象意义上的结构（也是我们后面重点关注和讨论的） 物理结构 则反映了 按一定逻辑结构组成的数据元素 在计算机内存中真正的存储结构在算法运行过程中，相关数据都存储在内存中, 这些数据的存储方式可分为 连续空间存储（数组） 和 分散空间存储（链表） 逻辑结构 逻辑结构 又可被分为 线性 和 非线性 两大类 线性结构比较直观，指数据在逻辑关系上呈线性排列；如：数组、链表、栈、队列、哈希表。 非线性结构则相反，呈非线性排列。如：树、堆、图、哈希表。 所有数据结构都是基于 数组、链表 或二者的组合实现的，例如 基于数组可实现：栈、队列、哈希表、树、堆、图、矩阵、张量（维度&gt;&#x3D;3的数组）等。基于链表可实现：栈、队列、哈希表、树、堆、图等。 lant: 数组 和 链表这两种逻辑数据结构，对应了内存上的两个最基本的物理存储结构 连续存储、分散存储，因此 数组 和 链表是最基本的逻辑数据结构，其他更为复杂的逻辑数据结构要使用哪种物理结构进行存储时，都需要基于这两个最基础的逻辑数据结构进行选择。 可以简单认为，对于一组数据，无论它们逻辑上是用哪种结构组合起来的。它们最终在物理介质上都是两种存储方式 连续存储、分散存储。 而这两种物理存储方式对应了最基础的两个数据结构 数组、链表。 所以无论你的数据是哪种逻辑结构的组合，最终也要选择基于什么样的物理结构进行存储，而 数组 和 链表 这两种基础数据结构分别对应了不同的物理存储结构。 如，下图中对于 堆 这种数据结构(逻辑上的)，可以采用 链表 或 数组 两种不同的 数据结构(物理上的) 进行存储。 参考文献 hello-algo 《数据结构与算法之美》王争","tags":[{"name":"数据结构","slug":"数据结构","permalink":"http://rymuscle.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}]}]