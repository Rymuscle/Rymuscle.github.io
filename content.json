[{"title":"二叉树","date":"2020-10-11T12:15:32.000Z","path":"2020/10/11/data-structure-algorithm/树-01/","text":"逻辑结构 和 物理结构数据结构可以从两个维度划分为： 逻辑结构 和 物理结构 两大类 逻辑结构 是 揭示了数据元素之间的逻辑关系，是抽象意义上的结构 （也是我们后面重点关注和讨论的） 123在数组和链表中，数据按照顺序依次排列，体现了数据之间的线性关系；而在树中，数据从顶部向下按层次排列，表现出祖先与后代之间的派生关系；图则由节点和边构成，反映了复杂的网络关系。 在算法运行过程中，相关数据都存储在内存中，物理结构 正是反映了 按一定逻辑结构组成的数据元素 在计算机内存中真正的存储结构可分为 连续空间存储（数组） 和 分散空间存储（链表） 逻辑结构逻辑结构可被分为“线性”和“非线性”两大类 线性结构比较直观，指数据在逻辑关系上呈线性排列；如：数组、链表、栈、队列、哈希表。 非线性结构则相反，呈非线性排列。如：树、堆、图、哈希表。 所有数据结构都是基于 数组、链表 或二者的组合实现的。 12例如，栈和队列既可以使用数组实现，也可以使用链表实现；而哈希表的实现可能同时包含数组和链表。 基于数组可实现：栈、队列、哈希表、树、堆、图、矩阵、张量（维度&gt;&#x3D;3的数组）等。基于链表可实现：栈、队列、哈希表、树、堆、图等。 参考：https://www.hello-algo.com/chapter_data_structure/classification_of_data_structure/","tags":[{"name":"数据结构","slug":"数据结构","permalink":"http://rymuscle.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"算法","slug":"算法","permalink":"http://rymuscle.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"二叉树","date":"2020-10-11T12:15:32.000Z","path":"2020/10/11/data-structure-algorithm/树-02/","text":"逻辑结构 和 物理结构数据结构可以从两个维度划分为： 逻辑结构 和 物理结构 两大类 逻辑结构 是 揭示了数据元素之间的逻辑关系，是抽象意义上的结构 （也是我们后面重点关注和讨论的） 123在数组和链表中，数据按照顺序依次排列，体现了数据之间的线性关系；而在树中，数据从顶部向下按层次排列，表现出祖先与后代之间的派生关系；图则由节点和边构成，反映了复杂的网络关系。 在算法运行过程中，相关数据都存储在内存中，物理结构 正是反映了 按一定逻辑结构组成的数据元素 在计算机内存中真正的存储结构可分为 连续空间存储（数组） 和 分散空间存储（链表） 逻辑结构逻辑结构可被分为“线性”和“非线性”两大类 线性结构比较直观，指数据在逻辑关系上呈线性排列；如：数组、链表、栈、队列、哈希表。 非线性结构则相反，呈非线性排列。如：树、堆、图、哈希表。 所有数据结构都是基于 数组、链表 或二者的组合实现的。 12例如，栈和队列既可以使用数组实现，也可以使用链表实现；而哈希表的实现可能同时包含数组和链表。 基于数组可实现：栈、队列、哈希表、树、堆、图、矩阵、张量（维度&gt;&#x3D;3的数组）等。基于链表可实现：栈、队列、哈希表、树、堆、图等。 参考：https://www.hello-algo.com/chapter_data_structure/classification_of_data_structure/","tags":[{"name":"数据结构","slug":"数据结构","permalink":"http://rymuscle.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"算法","slug":"算法","permalink":"http://rymuscle.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"二叉树","date":"2020-10-11T12:15:32.000Z","path":"2020/10/11/data-structure-algorithm/树-03/","text":"逻辑结构 和 物理结构数据结构可以从两个维度划分为： 逻辑结构 和 物理结构 两大类 逻辑结构 是 揭示了数据元素之间的逻辑关系，是抽象意义上的结构 （也是我们后面重点关注和讨论的） 123在数组和链表中，数据按照顺序依次排列，体现了数据之间的线性关系；而在树中，数据从顶部向下按层次排列，表现出祖先与后代之间的派生关系；图则由节点和边构成，反映了复杂的网络关系。 在算法运行过程中，相关数据都存储在内存中，物理结构 正是反映了 按一定逻辑结构组成的数据元素 在计算机内存中真正的存储结构可分为 连续空间存储（数组） 和 分散空间存储（链表） 逻辑结构逻辑结构可被分为“线性”和“非线性”两大类 线性结构比较直观，指数据在逻辑关系上呈线性排列；如：数组、链表、栈、队列、哈希表。 非线性结构则相反，呈非线性排列。如：树、堆、图、哈希表。 所有数据结构都是基于 数组、链表 或二者的组合实现的。 12例如，栈和队列既可以使用数组实现，也可以使用链表实现；而哈希表的实现可能同时包含数组和链表。 基于数组可实现：栈、队列、哈希表、树、堆、图、矩阵、张量（维度&gt;&#x3D;3的数组）等。基于链表可实现：栈、队列、哈希表、树、堆、图等。 参考：https://www.hello-algo.com/chapter_data_structure/classification_of_data_structure/","tags":[{"name":"数据结构","slug":"数据结构","permalink":"http://rymuscle.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"算法","slug":"算法","permalink":"http://rymuscle.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"二叉树","date":"2020-10-11T12:15:32.000Z","path":"2020/10/11/data-structure-algorithm/树-04/","text":"逻辑结构 和 物理结构数据结构可以从两个维度划分为： 逻辑结构 和 物理结构 两大类 逻辑结构 是 揭示了数据元素之间的逻辑关系，是抽象意义上的结构 （也是我们后面重点关注和讨论的） 123在数组和链表中，数据按照顺序依次排列，体现了数据之间的线性关系；而在树中，数据从顶部向下按层次排列，表现出祖先与后代之间的派生关系；图则由节点和边构成，反映了复杂的网络关系。 在算法运行过程中，相关数据都存储在内存中，物理结构 正是反映了 按一定逻辑结构组成的数据元素 在计算机内存中真正的存储结构可分为 连续空间存储（数组） 和 分散空间存储（链表） 逻辑结构逻辑结构可被分为“线性”和“非线性”两大类 线性结构比较直观，指数据在逻辑关系上呈线性排列；如：数组、链表、栈、队列、哈希表。 非线性结构则相反，呈非线性排列。如：树、堆、图、哈希表。 所有数据结构都是基于 数组、链表 或二者的组合实现的。 12例如，栈和队列既可以使用数组实现，也可以使用链表实现；而哈希表的实现可能同时包含数组和链表。 基于数组可实现：栈、队列、哈希表、树、堆、图、矩阵、张量（维度&gt;&#x3D;3的数组）等。基于链表可实现：栈、队列、哈希表、树、堆、图等。 参考：https://www.hello-algo.com/chapter_data_structure/classification_of_data_structure/","tags":[{"name":"数据结构","slug":"数据结构","permalink":"http://rymuscle.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"算法","slug":"算法","permalink":"http://rymuscle.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"二叉树","date":"2020-10-11T12:15:32.000Z","path":"2020/10/11/data-structure-algorithm/树-05/","text":"逻辑结构 和 物理结构数据结构可以从两个维度划分为： 逻辑结构 和 物理结构 两大类 逻辑结构 是 揭示了数据元素之间的逻辑关系，是抽象意义上的结构 （也是我们后面重点关注和讨论的） 123在数组和链表中，数据按照顺序依次排列，体现了数据之间的线性关系；而在树中，数据从顶部向下按层次排列，表现出祖先与后代之间的派生关系；图则由节点和边构成，反映了复杂的网络关系。 在算法运行过程中，相关数据都存储在内存中，物理结构 正是反映了 按一定逻辑结构组成的数据元素 在计算机内存中真正的存储结构可分为 连续空间存储（数组） 和 分散空间存储（链表） 逻辑结构逻辑结构可被分为“线性”和“非线性”两大类 线性结构比较直观，指数据在逻辑关系上呈线性排列；如：数组、链表、栈、队列、哈希表。 非线性结构则相反，呈非线性排列。如：树、堆、图、哈希表。 所有数据结构都是基于 数组、链表 或二者的组合实现的。 12例如，栈和队列既可以使用数组实现，也可以使用链表实现；而哈希表的实现可能同时包含数组和链表。 基于数组可实现：栈、队列、哈希表、树、堆、图、矩阵、张量（维度&gt;&#x3D;3的数组）等。基于链表可实现：栈、队列、哈希表、树、堆、图等。 参考：https://www.hello-algo.com/chapter_data_structure/classification_of_data_structure/","tags":[{"name":"数据结构","slug":"数据结构","permalink":"http://rymuscle.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"算法","slug":"算法","permalink":"http://rymuscle.github.io/tags/%E7%AE%97%E6%B3%95/"}]}]